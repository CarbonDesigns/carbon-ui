/** A bug in Chrome 25 on Lion requires each selector to have their own
      blocks. E.g. the following:

      .antiscroll-inner::-webkit-scrollbar, .antiscroll-inner::scrollbar {...}

      causes the width and height rules to be ignored by the browser resulting
      in both native and antiscroll scrollbars appearing at the same time.
  */
.antiscroll-inner::-webkit-scrollbar {
  width: 0;
  height: 0;
}
.antiscroll-inner::scrollbar {
  width: 0;
  height: 0;
}

.ReactVirtualized__Grid::-webkit-scrollbar {
  width: 0;
  height: 0;
}
.ReactVirtualized__Grid::scrollbar {
  width: 0;
  height: 0;
}

.ReactVirtualized__Collection::-webkit-scrollbar {
  width: 0;
  height: 0;
}
.ReactVirtualized__Collection::scrollbar {
  width: 0;
  height: 0;
}

#viewContainer::-webkit-scrollbar {
  width: 0;
  height: 0;
}
#viewContainer::scrollbar {
  width: 0;
  height: 0;
}

html::-webkit-scrollbar {
  width: 0;
  height: 0;
}
html::scrollbar {
  width: 0;
  height: 0;
}

html, #viewContainer, .antiscroll-inner, .ReactVirtualized__Grid, .ReactVirtualized__Collection {
  -ms-overflow-style: none;
}
